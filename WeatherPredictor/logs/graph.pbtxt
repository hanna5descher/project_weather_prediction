node {
  name: "Train/Model/inputs/input_batch"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 24
          }
          dim {
            size: 77
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
        dim {
          size: 24
        }
        dim {
          size: 77
        }
      }
    }
  }
}
node {
  name: "Train/Model/targets/target_batch"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 24
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
        dim {
          size: 24
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Train/Model/targets/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/targets/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/targets/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/targets/strided_slice"
  op: "StridedSlice"
  input: "Train/Model/targets/target_batch"
  input: "Train/Model/targets/strided_slice/stack"
  input: "Train/Model/targets/strided_slice/stack_1"
  input: "Train/Model/targets/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/targets/ToInt32"
  op: "Cast"
  input: "Train/Model/targets/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/targets/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/targets/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/targets/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 120
      }
    }
  }
}
node {
  name: "Train/Model/targets/one_hot"
  op: "OneHot"
  input: "Train/Model/targets/ToInt32"
  input: "Train/Model/targets/one_hot/depth"
  input: "Train/Model/targets/one_hot/on_value"
  input: "Train/Model/targets/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "Train/Model/LSTM/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/DropoutWrapperInit_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/DropoutWrapperInit_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/DropoutWrapperInit_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/transpose"
  op: "Transpose"
  input: "Train/Model/inputs/input_batch"
  input: "Train/Model/LSTM/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 1000
          }
          dim {
            size: 77
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\030\000\000\000\350\003\000\000M\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice"
  op: "StridedSlice"
  input: "Train/Model/LSTM/rnn/Shape"
  input: "Train/Model/LSTM/rnn/strided_slice/stack"
  input: "Train/Model/LSTM/rnn/strided_slice/stack_1"
  input: "Train/Model/LSTM/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "Train/Model/LSTM/rnn/Shape"
  input: "Train/Model/LSTM/rnn/strided_slice_1/stack"
  input: "Train/Model/LSTM/rnn/strided_slice_1/stack_1"
  input: "Train/Model/LSTM/rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/stack"
  op: "Pack"
  input: "Train/Model/LSTM/rnn/strided_slice"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/stack"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/stack_1/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/stack_1"
  op: "Pack"
  input: "Train/Model/LSTM/rnn/strided_slice"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/stack_1"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/stack"
  op: "Pack"
  input: "Train/Model/LSTM/rnn/strided_slice"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/stack"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/stack_1/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/stack_1"
  op: "Pack"
  input: "Train/Model/LSTM/rnn/strided_slice"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/stack_1"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\030\000\000\000\350\003\000\000M\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "Train/Model/LSTM/rnn/Shape_1"
  input: "Train/Model/LSTM/rnn/strided_slice_2/stack"
  input: "Train/Model/LSTM/rnn/strided_slice_2/stack_1"
  input: "Train/Model/LSTM/rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/strided_slice_3"
  op: "StridedSlice"
  input: "Train/Model/LSTM/rnn/Shape_1"
  input: "Train/Model/LSTM/rnn/strided_slice_3/stack"
  input: "Train/Model/LSTM/rnn/strided_slice_3/stack_1"
  input: "Train/Model/LSTM/rnn/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/stack"
  op: "Pack"
  input: "Train/Model/LSTM/rnn/strided_slice_3"
  input: "Train/Model/LSTM/rnn/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/zeros"
  op: "Fill"
  input: "Train/Model/LSTM/rnn/stack"
  input: "Train/Model/LSTM/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "Train/Model/LSTM/rnn/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "Train/Model/LSTM/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "Train/Model/LSTM/rnn/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "Train/Model/LSTM/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\030\000\000\000\350\003\000\000M\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "Train/Model/LSTM/rnn/TensorArrayUnstack/Shape"
  input: "Train/Model/LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "Train/Model/LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "Train/Model/LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "Train/Model/LSTM/rnn/TensorArrayUnstack/range/start"
  input: "Train/Model/LSTM/rnn/TensorArrayUnstack/strided_slice"
  input: "Train/Model/LSTM/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "Train/Model/LSTM/rnn/TensorArray_1"
  input: "Train/Model/LSTM/rnn/TensorArrayUnstack/range"
  input: "Train/Model/LSTM/transpose"
  input: "Train/Model/LSTM/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Enter"
  op: "Enter"
  input: "Train/Model/LSTM/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Enter_1"
  op: "Enter"
  input: "Train/Model/LSTM/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Enter_2"
  op: "Enter"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Enter_3"
  op: "Enter"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Enter_4"
  op: "Enter"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Enter_5"
  op: "Enter"
  input: "Train/Model/LSTM/rnn/MultiRNNCellZeroState/DropoutWrapperZeroState_1/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Merge"
  op: "Merge"
  input: "Train/Model/LSTM/rnn/while/Enter"
  input: "Train/Model/LSTM/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Merge_1"
  op: "Merge"
  input: "Train/Model/LSTM/rnn/while/Enter_1"
  input: "Train/Model/LSTM/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Merge_2"
  op: "Merge"
  input: "Train/Model/LSTM/rnn/while/Enter_2"
  input: "Train/Model/LSTM/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Merge_3"
  op: "Merge"
  input: "Train/Model/LSTM/rnn/while/Enter_3"
  input: "Train/Model/LSTM/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Merge_4"
  op: "Merge"
  input: "Train/Model/LSTM/rnn/while/Enter_4"
  input: "Train/Model/LSTM/rnn/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Merge_5"
  op: "Merge"
  input: "Train/Model/LSTM/rnn/while/Enter_5"
  input: "Train/Model/LSTM/rnn/while/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Less/Enter"
  op: "Enter"
  input: "Train/Model/LSTM/rnn/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Less"
  op: "Less"
  input: "Train/Model/LSTM/rnn/while/Merge"
  input: "Train/Model/LSTM/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/LoopCond"
  op: "LoopCond"
  input: "Train/Model/LSTM/rnn/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Switch"
  op: "Switch"
  input: "Train/Model/LSTM/rnn/while/Merge"
  input: "Train/Model/LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Switch_1"
  op: "Switch"
  input: "Train/Model/LSTM/rnn/while/Merge_1"
  input: "Train/Model/LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Switch_2"
  op: "Switch"
  input: "Train/Model/LSTM/rnn/while/Merge_2"
  input: "Train/Model/LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Switch_3"
  op: "Switch"
  input: "Train/Model/LSTM/rnn/while/Merge_3"
  input: "Train/Model/LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Switch_4"
  op: "Switch"
  input: "Train/Model/LSTM/rnn/while/Merge_4"
  input: "Train/Model/LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Switch_5"
  op: "Switch"
  input: "Train/Model/LSTM/rnn/while/Merge_5"
  input: "Train/Model/LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Identity"
  op: "Identity"
  input: "Train/Model/LSTM/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Identity_1"
  op: "Identity"
  input: "Train/Model/LSTM/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Identity_2"
  op: "Identity"
  input: "Train/Model/LSTM/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Identity_3"
  op: "Identity"
  input: "Train/Model/LSTM/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Identity_4"
  op: "Identity"
  input: "Train/Model/LSTM/rnn/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Identity_5"
  op: "Identity"
  input: "Train/Model/LSTM/rnn/while/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "Train/Model/LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "Train/Model/LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "Train/Model/LSTM/rnn/while/TensorArrayReadV3/Enter"
  input: "Train/Model/LSTM/rnn/while/Identity"
  input: "Train/Model/LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 77
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\261\000\000\000\220\001\000\000"
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10197359323501587
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10197359323501587
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform/max"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform/RandomUniform"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform"
  op: "Add"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform/mul"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 177
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Assign"
  op: "Assign"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  op: "Identity"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "Train/Model/LSTM/rnn/while/TensorArrayReadV3"
  input: "Train/Model/LSTM/rnn/while/Identity_3"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 177
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter"
  op: "Enter"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Assign"
  op: "Assign"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  op: "Identity"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter"
  op: "Enter"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "Train/Model/LSTM/rnn/while/Identity_2"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/keep_prob"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/Shape"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  op: "Sub"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/random_uniform/max"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  op: "Mul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/random_uniform"
  op: "Add"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/add"
  op: "Add"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/keep_prob"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/Floor"
  op: "Floor"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div"
  op: "RealDiv"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul"
  op: "Mul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\220\001\000\000"
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform/max"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform/RandomUniform"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform"
  op: "Add"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform/mul"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Assign"
  op: "Assign"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  op: "Identity"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul"
  input: "Train/Model/LSTM/rnn/while/Identity_5"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter"
  op: "Enter"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Assign"
  op: "Assign"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  op: "Identity"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter"
  op: "Enter"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "Train/Model/LSTM/rnn/while/Identity_4"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/keep_prob"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/Shape"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/random_uniform/max"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/random_uniform"
  op: "Add"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/add"
  op: "Add"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/keep_prob"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/Floor"
  op: "Floor"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div"
  op: "RealDiv"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul"
  op: "Mul"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "Train/Model/LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "Train/Model/LSTM/rnn/while/Identity"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul"
  input: "Train/Model/LSTM/rnn/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/add/y"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/add"
  op: "Add"
  input: "Train/Model/LSTM/rnn/while/Identity"
  input: "Train/Model/LSTM/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/NextIteration"
  op: "NextIteration"
  input: "Train/Model/LSTM/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/NextIteration_5"
  op: "NextIteration"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Exit"
  op: "Exit"
  input: "Train/Model/LSTM/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Exit_1"
  op: "Exit"
  input: "Train/Model/LSTM/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Exit_2"
  op: "Exit"
  input: "Train/Model/LSTM/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Exit_3"
  op: "Exit"
  input: "Train/Model/LSTM/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Exit_4"
  op: "Exit"
  input: "Train/Model/LSTM/rnn/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/while/Exit_5"
  op: "Exit"
  input: "Train/Model/LSTM/rnn/while/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "Train/Model/LSTM/rnn/TensorArray"
  input: "Train/Model/LSTM/rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArrayStack/range"
  op: "Range"
  input: "Train/Model/LSTM/rnn/TensorArrayStack/range/start"
  input: "Train/Model/LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "Train/Model/LSTM/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "Train/Model/LSTM/rnn/TensorArray"
  input: "Train/Model/LSTM/rnn/TensorArrayStack/range"
  input: "Train/Model/LSTM/rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 1000
        }
        dim {
          size: 100
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/rnn/transpose"
  op: "Transpose"
  input: "Train/Model/LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "Train/Model/LSTM/rnn/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 24
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/LSTM/Reshape"
  op: "Reshape"
  input: "Train/Model/LSTM/rnn/transpose"
  input: "Train/Model/LSTM/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Model/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "Model/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16514456272125244
      }
    }
  }
}
node {
  name: "Model/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16514456272125244
      }
    }
  }
}
node {
  name: "Model/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Model/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/W/Initializer/random_uniform/max"
  input: "Model/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/W/Initializer/random_uniform/RandomUniform"
  input: "Model/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Model/W/Initializer/random_uniform"
  op: "Add"
  input: "Model/W/Initializer/random_uniform/mul"
  input: "Model/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Model/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/W/Assign"
  op: "Assign"
  input: "Model/W"
  input: "Model/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/W/read"
  op: "Identity"
  input: "Model/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Model/b/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "Model/b/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.22268088161945343
      }
    }
  }
}
node {
  name: "Model/b/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.22268088161945343
      }
    }
  }
}
node {
  name: "Model/b/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/b/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Model/b/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/b/Initializer/random_uniform/max"
  input: "Model/b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/b/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/b/Initializer/random_uniform/RandomUniform"
  input: "Model/b/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Model/b/Initializer/random_uniform"
  op: "Add"
  input: "Model/b/Initializer/random_uniform/mul"
  input: "Model/b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Model/b"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/b/Assign"
  op: "Assign"
  input: "Model/b"
  input: "Model/b/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/b/read"
  op: "Identity"
  input: "Model/b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LinearLayer/W/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/LinearLayer/W"
      }
    }
  }
}
node {
  name: "Train/Model/LinearLayer/W"
  op: "HistogramSummary"
  input: "Train/Model/LinearLayer/W/tag"
  input: "Model/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/LinearLayer/MatMul"
  op: "MatMul"
  input: "Train/Model/LSTM/Reshape"
  input: "Model/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24000
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/LinearLayer/add"
  op: "Add"
  input: "Train/Model/LinearLayer/MatMul"
  input: "Model/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24000
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/LinearLayer/Softmax"
  op: "Softmax"
  input: "Train/Model/LinearLayer/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24000
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\350\003\000\000\030\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Reshape"
  op: "Reshape"
  input: "Train/Model/LinearLayer/add"
  input: "Train/Model/cost_calc/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 24
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/strided_slice"
  op: "StridedSlice"
  input: "Train/Model/cost_calc/Reshape"
  input: "Train/Model/cost_calc/strided_slice/stack"
  input: "Train/Model/cost_calc/strided_slice/stack_1"
  input: "Train/Model/cost_calc/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/cost_calc/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\350\003\000\000\001\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\350\003\000\000\001\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Sub"
  op: "Sub"
  input: "Train/Model/cost_calc/Rank_1"
  input: "Train/Model/cost_calc/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Slice/begin"
  op: "Pack"
  input: "Train/Model/cost_calc/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/cost_calc/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Slice"
  op: "Slice"
  input: "Train/Model/cost_calc/Shape_1"
  input: "Train/Model/cost_calc/Slice/begin"
  input: "Train/Model/cost_calc/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/concat"
  op: "ConcatV2"
  input: "Train/Model/cost_calc/concat/values_0"
  input: "Train/Model/cost_calc/Slice"
  input: "Train/Model/cost_calc/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Reshape_1"
  op: "Reshape"
  input: "Train/Model/cost_calc/strided_slice"
  input: "Train/Model/cost_calc/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\350\003\000\000\001\000\000\000\001\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Sub_1"
  op: "Sub"
  input: "Train/Model/cost_calc/Rank_2"
  input: "Train/Model/cost_calc/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Slice_1/begin"
  op: "Pack"
  input: "Train/Model/cost_calc/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/cost_calc/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Slice_1"
  op: "Slice"
  input: "Train/Model/cost_calc/Shape_2"
  input: "Train/Model/cost_calc/Slice_1/begin"
  input: "Train/Model/cost_calc/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/concat_1"
  op: "ConcatV2"
  input: "Train/Model/cost_calc/concat_1/values_0"
  input: "Train/Model/cost_calc/Slice_1"
  input: "Train/Model/cost_calc/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Reshape_2"
  op: "Reshape"
  input: "Train/Model/targets/one_hot"
  input: "Train/Model/cost_calc/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/SoftmaxCrossEntropyWithLogits"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "Train/Model/cost_calc/Reshape_1"
  input: "Train/Model/cost_calc/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
        }
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Sub_2"
  op: "Sub"
  input: "Train/Model/cost_calc/Rank"
  input: "Train/Model/cost_calc/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Slice_2/size"
  op: "Pack"
  input: "Train/Model/cost_calc/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/cost_calc/Slice_2"
  op: "Slice"
  input: "Train/Model/cost_calc/Shape"
  input: "Train/Model/cost_calc/Slice_2/begin"
  input: "Train/Model/cost_calc/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Reshape_3"
  op: "Reshape"
  input: "Train/Model/cost_calc/SoftmaxCrossEntropyWithLogits"
  input: "Train/Model/cost_calc/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/cost_calc/Mean"
  op: "Mean"
  input: "Train/Model/cost_calc/Reshape_3"
  input: "Train/Model/cost_calc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/global_step/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/global_step"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/global_step/Assign"
  op: "Assign"
  input: "Train/Model/global_step"
  input: "Train/Model/global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/global_step/read"
  op: "Identity"
  input: "Train/Model/global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Fill"
  op: "Fill"
  input: "Train/Model/gradients/Shape"
  input: "Train/Model/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/f_count_1"
  op: "Enter"
  input: "Train/Model/gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Merge"
  op: "Merge"
  input: "Train/Model/gradients/f_count_1"
  input: "Train/Model/gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Merge"
  input: "Train/Model/LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Add/y"
  op: "Const"
  input: "^Train/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Add"
  op: "Add"
  input: "Train/Model/gradients/Switch:1"
  input: "Train/Model/gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Add"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPush_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPush"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPush_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/f_count_2"
  op: "Exit"
  input: "Train/Model/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/gradients/b_count_1"
  op: "Enter"
  input: "Train/Model/gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Merge_1"
  op: "Merge"
  input: "Train/Model/gradients/b_count_1"
  input: "Train/Model/gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "Train/Model/gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "Train/Model/gradients/Merge_1"
  input: "Train/Model/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/b_count_2"
  op: "LoopCond"
  input: "Train/Model/gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Switch_1"
  op: "Switch"
  input: "Train/Model/gradients/Merge_1"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Sub"
  op: "Sub"
  input: "Train/Model/gradients/Switch_1:1"
  input: "Train/Model/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/NextIteration_1"
  op: "NextIteration"
  input: "Train/Model/gradients/Sub"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/b_count_3"
  op: "Exit"
  input: "Train/Model/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Fill"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Tile"
  op: "Tile"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Prod"
  op: "Prod"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Shape"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Prod_1"
  op: "Prod"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Shape_1"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Maximum"
  op: "Maximum"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Prod_1"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Prod"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Cast"
  op: "Cast"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/truediv"
  op: "RealDiv"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Tile"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Reshape_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Reshape_3_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/cost_calc/Mean_grad/truediv"
  input: "Train/Model/gradients/Train/Model/cost_calc/Reshape_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/zeros_like"
  op: "ZerosLike"
  input: "Train/Model/cost_calc/SoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "Train/Model/gradients/Train/Model/cost_calc/Reshape_3_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/cost_calc/SoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/SoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/cost_calc/SoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "Train/Model/cost_calc/SoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Reshape_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\350\003\000\000\001\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/cost_calc/SoftmaxCrossEntropyWithLogits_grad/mul"
  input: "Train/Model/gradients/Train/Model/cost_calc/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\350\003\000\000\030\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "Train/Model/gradients/Train/Model/cost_calc/strided_slice_grad/Shape"
  input: "Train/Model/cost_calc/strided_slice/stack"
  input: "Train/Model/cost_calc/strided_slice/stack_1"
  input: "Train/Model/cost_calc/strided_slice/stack_2"
  input: "Train/Model/gradients/Train/Model/cost_calc/Reshape_1_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 24
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\300]\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/cost_calc/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/cost_calc/strided_slice_grad/StridedSliceGrad"
  input: "Train/Model/gradients/Train/Model/cost_calc/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24000
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\300]\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000x\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/cost_calc/Reshape_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24000
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/cost_calc/Reshape_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LinearLayer/add_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LinearLayer/add_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LinearLayer/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LinearLayer/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24000
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LinearLayer/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LinearLayer/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/tuple/control_dependency"
  input: "Model/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/LSTM/Reshape"
  input: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/MatMul"
  input: "^Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/MatMul_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/MatMul"
  input: "^Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/MatMul_1"
  input: "^Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\350\003\000\000\030\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 24
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "Train/Model/LSTM/rnn/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/transpose_grad/transpose"
  op: "Transpose"
  input: "Train/Model/gradients/Train/Model/LSTM/Reshape_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "Train/Model/LSTM/rnn/TensorArray"
  input: "Train/Model/LSTM/rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "Train/Model/gradients"
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "Train/Model/LSTM/rnn/while/Exit_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "Train/Model/LSTM/rnn/TensorArrayStack/range"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/transpose_grad/transpose"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "Train/Model/LSTM/rnn/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "Train/Model/LSTM/rnn/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "Train/Model/LSTM/rnn/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "Train/Model/LSTM/rnn/while/Exit_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "Train/Model/gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "Train/Model/gradients/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "Train/Model/gradients/zeros_like_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "Train/Model/gradients/zeros_like_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Exit_1_grad/b_exit"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Exit_2_grad/b_exit"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Exit_3_grad/b_exit"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_4_grad/b_switch"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Exit_4_grad/b_exit"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_4_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_5_grad/b_switch"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Exit_5_grad/b_exit"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_5_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_1_grad/b_switch"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_1_grad/Switch"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_1_grad/Switch"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_1_grad/Switch:1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_2_grad/b_switch"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_2_grad/Switch"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_2_grad/Switch"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_2_grad/Switch:1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_3_grad/b_switch"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_3_grad/Switch"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_3_grad/Switch"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_3_grad/Switch:1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_4_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_4_grad/b_switch"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_4_grad/Switch"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_4_grad/Switch"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_4_grad/Switch:1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_5_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_5_grad/b_switch"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_5_grad/Switch"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_5_grad/Switch"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_5_grad/Switch:1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "Train/Model/LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "Train/Model/gradients"
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
        s: "loc:@Train/Model/LSTM/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
        s: "loc:@Train/Model/LSTM/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "Train/Model/LSTM/rnn/while/Identity"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
        s: "loc:@Train/Model/LSTM/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
        s: "loc:@Train/Model/LSTM/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
        s: "loc:@Train/Model/LSTM/rnn/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/Floor"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/keep_prob"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Neg/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Neg"
  op: "Neg"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Neg"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_5_grad/tuple/control_dependency_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_5_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/AddN"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "Train/Model/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_1"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_4_grad/tuple/control_dependency_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_4_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/AddN_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/AddN_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "Train/Model/LSTM/rnn/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Shape"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  input: "Train/Model/LSTM/rnn/while/Identity_4"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_4_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/BiasAddGrad"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_2"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Rank"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod"
  op: "FloorMod"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape_1"
  op: "Shape"
  input: "Train/Model/LSTM/rnn/while/Identity_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/RefEnter_1"
  input: "Train/Model/LSTM/rnn/while/Identity_5"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_2"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Add"
  op: "Add"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/Floor"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/keep_prob"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Neg/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  op: "Neg"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_5_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_2"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_3_grad/tuple/control_dependency_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/AddN_2"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "Train/Model/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_3"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Merge_2_grad/tuple/control_dependency_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/AddN_3"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/AddN_3"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Shape"
  op: "Shape"
  input: "Train/Model/LSTM/rnn/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Shape"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul_1/RefEnter"
  input: "Train/Model/LSTM/rnn/while/Identity_2"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/mul/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Shape_1"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Reshape_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Reshape"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Reshape_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat"
  op: "ConcatV2"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/BiasAddGrad"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 177
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 177
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 177
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_2"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Rank"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/RefEnter"
  input: "Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod"
  op: "FloorMod"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape"
  op: "Const"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\350\003\000\000M\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Shape_1"
  op: "Shape"
  input: "Train/Model/LSTM/rnn/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/RefEnter"
  input: "Train/Model/LSTM/rnn/while/TensorArrayReadV3"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 77
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/RefEnter_1"
  input: "Train/Model/LSTM/rnn/while/Identity_3"
  input: "^Train/Model/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^Train/Model/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/LSTM/rnn/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/mod"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/control_dependency"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice_1"
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1000
          }
          dim {
            size: 77
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice_1"
  input: "^Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Train/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_2"
  input: "Train/Model/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Add"
  op: "Add"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Switch:1"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/LSTM/rnn/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 177
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta/Assign"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta/read"
  op: "Identity"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 177
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1/Assign"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1/read"
  op: "Identity"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta/Assign"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta/read"
  op: "Identity"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1/Assign"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1/read"
  op: "Identity"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta/Assign"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta/read"
  op: "Identity"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1/Assign"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1/read"
  op: "Identity"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta/Assign"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta/read"
  op: "Identity"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 400
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 400
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1/Assign"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1/read"
  op: "Identity"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
}
node {
  name: "Model/Model/W/Adadelta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/Model/W/Adadelta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/Model/W/Adadelta/Assign"
  op: "Assign"
  input: "Model/Model/W/Adadelta"
  input: "Model/Model/W/Adadelta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/Model/W/Adadelta/read"
  op: "Identity"
  input: "Model/Model/W/Adadelta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Model/Model/W/Adadelta_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/Model/W/Adadelta_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/Model/W/Adadelta_1/Assign"
  op: "Assign"
  input: "Model/Model/W/Adadelta_1"
  input: "Model/Model/W/Adadelta_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/Model/W/Adadelta_1/read"
  op: "Identity"
  input: "Model/Model/W/Adadelta_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Model/Model/b/Adadelta/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/Model/b/Adadelta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/Model/b/Adadelta/Assign"
  op: "Assign"
  input: "Model/Model/b/Adadelta"
  input: "Model/Model/b/Adadelta/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/Model/b/Adadelta/read"
  op: "Identity"
  input: "Model/Model/b/Adadelta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Model/Model/b/Adadelta_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/Model/b/Adadelta_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 120
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/Model/b/Adadelta_1/Assign"
  op: "Assign"
  input: "Model/Model/b/Adadelta_1"
  input: "Model/Model/b/Adadelta_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/Model/b/Adadelta_1/read"
  op: "Identity"
  input: "Model/Model/b/Adadelta_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/Adadelta/lr"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "Train/Model/Adadelta/rho"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079071
      }
    }
  }
}
node {
  name: "Train/Model/Adadelta/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Train/Model/Adadelta/update_Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/ApplyAdadelta"
  op: "ApplyAdadelta"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1"
  input: "Train/Model/Adadelta/lr"
  input: "Train/Model/Adadelta/rho"
  input: "Train/Model/Adadelta/epsilon"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/Adadelta/update_Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/ApplyAdadelta"
  op: "ApplyAdadelta"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1"
  input: "Train/Model/Adadelta/lr"
  input: "Train/Model/Adadelta/rho"
  input: "Train/Model/Adadelta/epsilon"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/Adadelta/update_Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/ApplyAdadelta"
  op: "ApplyAdadelta"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1"
  input: "Train/Model/Adadelta/lr"
  input: "Train/Model/Adadelta/rho"
  input: "Train/Model/Adadelta/epsilon"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/Adadelta/update_Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/ApplyAdadelta"
  op: "ApplyAdadelta"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1"
  input: "Train/Model/Adadelta/lr"
  input: "Train/Model/Adadelta/rho"
  input: "Train/Model/Adadelta/epsilon"
  input: "Train/Model/gradients/Train/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/Adadelta/update_Model/W/ApplyAdadelta"
  op: "ApplyAdadelta"
  input: "Model/W"
  input: "Model/Model/W/Adadelta"
  input: "Model/Model/W/Adadelta_1"
  input: "Train/Model/Adadelta/lr"
  input: "Train/Model/Adadelta/rho"
  input: "Train/Model/Adadelta/epsilon"
  input: "Train/Model/gradients/Train/Model/LinearLayer/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/Adadelta/update_Model/b/ApplyAdadelta"
  op: "ApplyAdadelta"
  input: "Model/b"
  input: "Model/Model/b/Adadelta"
  input: "Model/Model/b/Adadelta_1"
  input: "Train/Model/Adadelta/lr"
  input: "Train/Model/Adadelta/rho"
  input: "Train/Model/Adadelta/epsilon"
  input: "Train/Model/gradients/Train/Model/LinearLayer/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/Adadelta/update"
  op: "NoOp"
  input: "^Train/Model/Adadelta/update_Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/ApplyAdadelta"
  input: "^Train/Model/Adadelta/update_Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/ApplyAdadelta"
  input: "^Train/Model/Adadelta/update_Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/ApplyAdadelta"
  input: "^Train/Model/Adadelta/update_Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/ApplyAdadelta"
  input: "^Train/Model/Adadelta/update_Model/W/ApplyAdadelta"
  input: "^Train/Model/Adadelta/update_Model/b/ApplyAdadelta"
}
node {
  name: "Train/Model/Adadelta/value"
  op: "Const"
  input: "^Train/Model/Adadelta/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/Adadelta"
  op: "AssignAdd"
  input: "Train/Model/global_step"
  input: "Train/Model/Adadelta/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/cost_mean/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/cost_mean"
      }
    }
  }
}
node {
  name: "Train/Model/cost_mean"
  op: "ScalarSummary"
  input: "Train/Model/cost_mean/tags"
  input: "Train/Model/cost_calc/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/strided_slice"
  op: "StridedSlice"
  input: "Train/Model/LinearLayer/Softmax"
  input: "Train/Model/strided_slice/stack"
  input: "Train/Model/strided_slice/stack_1"
  input: "Train/Model/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Train/Model/prediction_prob/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/prediction_prob"
      }
    }
  }
}
node {
  name: "Train/Model/prediction_prob"
  op: "HistogramSummary"
  input: "Train/Model/prediction_prob/tag"
  input: "Train/Model/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/inputs/input_batch"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 77
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 77
        }
      }
    }
  }
}
node {
  name: "Pred/Model/targets/target_batch"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Pred/Model/targets/ToInt32"
  op: "Cast"
  input: "Pred/Model/targets/target_batch"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/targets/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Pred/Model/targets/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Pred/Model/targets/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 120
      }
    }
  }
}
node {
  name: "Pred/Model/targets/one_hot"
  op: "OneHot"
  input: "Pred/Model/targets/ToInt32"
  input: "Pred/Model/targets/one_hot/depth"
  input: "Pred/Model/targets/one_hot/on_value"
  input: "Pred/Model/targets/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "Pred/Model/LSTM/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/transpose"
  op: "Transpose"
  input: "Pred/Model/inputs/input_batch"
  input: "Pred/Model/LSTM/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 1
          }
          dim {
            size: 77
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\030\000\000\000\001\000\000\000M\000\000\000"
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice"
  op: "StridedSlice"
  input: "Pred/Model/LSTM/rnn/Shape"
  input: "Pred/Model/LSTM/rnn/strided_slice/stack"
  input: "Pred/Model/LSTM/rnn/strided_slice/stack_1"
  input: "Pred/Model/LSTM/rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice_1"
  op: "StridedSlice"
  input: "Pred/Model/LSTM/rnn/Shape"
  input: "Pred/Model/LSTM/rnn/strided_slice_1/stack"
  input: "Pred/Model/LSTM/rnn/strided_slice_1/stack_1"
  input: "Pred/Model/LSTM/rnn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack"
  op: "Pack"
  input: "Pred/Model/LSTM/rnn/strided_slice"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  op: "Fill"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1"
  op: "Pack"
  input: "Pred/Model/LSTM/rnn/strided_slice"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  op: "Fill"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/stack_1"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack"
  op: "Pack"
  input: "Pred/Model/LSTM/rnn/strided_slice"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  op: "Fill"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1"
  op: "Pack"
  input: "Pred/Model/LSTM/rnn/strided_slice"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  op: "Fill"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/stack_1"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\030\000\000\000\001\000\000\000M\000\000\000"
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice_2"
  op: "StridedSlice"
  input: "Pred/Model/LSTM/rnn/Shape_1"
  input: "Pred/Model/LSTM/rnn/strided_slice_2/stack"
  input: "Pred/Model/LSTM/rnn/strided_slice_2/stack_1"
  input: "Pred/Model/LSTM/rnn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/strided_slice_3"
  op: "StridedSlice"
  input: "Pred/Model/LSTM/rnn/Shape_1"
  input: "Pred/Model/LSTM/rnn/strided_slice_3/stack"
  input: "Pred/Model/LSTM/rnn/strided_slice_3/stack_1"
  input: "Pred/Model/LSTM/rnn/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/stack"
  op: "Pack"
  input: "Pred/Model/LSTM/rnn/strided_slice_3"
  input: "Pred/Model/LSTM/rnn/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/zeros"
  op: "Fill"
  input: "Pred/Model/LSTM/rnn/stack"
  input: "Pred/Model/LSTM/rnn/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArray"
  op: "TensorArrayV3"
  input: "Pred/Model/LSTM/rnn/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "Pred/Model/LSTM/rnn/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArray_1"
  op: "TensorArrayV3"
  input: "Pred/Model/LSTM/rnn/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "Pred/Model/LSTM/rnn/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\030\000\000\000\001\000\000\000M\000\000\000"
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "Pred/Model/LSTM/rnn/TensorArrayUnstack/Shape"
  input: "Pred/Model/LSTM/rnn/TensorArrayUnstack/strided_slice/stack"
  input: "Pred/Model/LSTM/rnn/TensorArrayUnstack/strided_slice/stack_1"
  input: "Pred/Model/LSTM/rnn/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArrayUnstack/range"
  op: "Range"
  input: "Pred/Model/LSTM/rnn/TensorArrayUnstack/range/start"
  input: "Pred/Model/LSTM/rnn/TensorArrayUnstack/strided_slice"
  input: "Pred/Model/LSTM/rnn/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "Pred/Model/LSTM/rnn/TensorArray_1"
  input: "Pred/Model/LSTM/rnn/TensorArrayUnstack/range"
  input: "Pred/Model/LSTM/transpose"
  input: "Pred/Model/LSTM/rnn/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Enter"
  op: "Enter"
  input: "Pred/Model/LSTM/rnn/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Pred/Model/LSTM/rnn/while/Pred/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Enter_1"
  op: "Enter"
  input: "Pred/Model/LSTM/rnn/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Pred/Model/LSTM/rnn/while/Pred/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Enter_2"
  op: "Enter"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Pred/Model/LSTM/rnn/while/Pred/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Enter_3"
  op: "Enter"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Pred/Model/LSTM/rnn/while/Pred/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Enter_4"
  op: "Enter"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Pred/Model/LSTM/rnn/while/Pred/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Enter_5"
  op: "Enter"
  input: "Pred/Model/LSTM/rnn/MultiRNNCellZeroState/BasicLSTMCellZeroState_1/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Pred/Model/LSTM/rnn/while/Pred/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Merge"
  op: "Merge"
  input: "Pred/Model/LSTM/rnn/while/Enter"
  input: "Pred/Model/LSTM/rnn/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Merge_1"
  op: "Merge"
  input: "Pred/Model/LSTM/rnn/while/Enter_1"
  input: "Pred/Model/LSTM/rnn/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Merge_2"
  op: "Merge"
  input: "Pred/Model/LSTM/rnn/while/Enter_2"
  input: "Pred/Model/LSTM/rnn/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Merge_3"
  op: "Merge"
  input: "Pred/Model/LSTM/rnn/while/Enter_3"
  input: "Pred/Model/LSTM/rnn/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Merge_4"
  op: "Merge"
  input: "Pred/Model/LSTM/rnn/while/Enter_4"
  input: "Pred/Model/LSTM/rnn/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Merge_5"
  op: "Merge"
  input: "Pred/Model/LSTM/rnn/while/Enter_5"
  input: "Pred/Model/LSTM/rnn/while/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Less/Enter"
  op: "Enter"
  input: "Pred/Model/LSTM/rnn/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Pred/Model/LSTM/rnn/while/Pred/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Less"
  op: "Less"
  input: "Pred/Model/LSTM/rnn/while/Merge"
  input: "Pred/Model/LSTM/rnn/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/LoopCond"
  op: "LoopCond"
  input: "Pred/Model/LSTM/rnn/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Switch"
  op: "Switch"
  input: "Pred/Model/LSTM/rnn/while/Merge"
  input: "Pred/Model/LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Switch_1"
  op: "Switch"
  input: "Pred/Model/LSTM/rnn/while/Merge_1"
  input: "Pred/Model/LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Switch_2"
  op: "Switch"
  input: "Pred/Model/LSTM/rnn/while/Merge_2"
  input: "Pred/Model/LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Switch_3"
  op: "Switch"
  input: "Pred/Model/LSTM/rnn/while/Merge_3"
  input: "Pred/Model/LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Switch_4"
  op: "Switch"
  input: "Pred/Model/LSTM/rnn/while/Merge_4"
  input: "Pred/Model/LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Switch_5"
  op: "Switch"
  input: "Pred/Model/LSTM/rnn/while/Merge_5"
  input: "Pred/Model/LSTM/rnn/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Identity"
  op: "Identity"
  input: "Pred/Model/LSTM/rnn/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Identity_1"
  op: "Identity"
  input: "Pred/Model/LSTM/rnn/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Identity_2"
  op: "Identity"
  input: "Pred/Model/LSTM/rnn/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Identity_3"
  op: "Identity"
  input: "Pred/Model/LSTM/rnn/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Identity_4"
  op: "Identity"
  input: "Pred/Model/LSTM/rnn/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Identity_5"
  op: "Identity"
  input: "Pred/Model/LSTM/rnn/while/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "Pred/Model/LSTM/rnn/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Pred/Model/LSTM/rnn/while/Pred/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "Pred/Model/LSTM/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Pred/Model/LSTM/rnn/while/Pred/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "Pred/Model/LSTM/rnn/while/TensorArrayReadV3/Enter"
  input: "Pred/Model/LSTM/rnn/while/Identity"
  input: "Pred/Model/LSTM/rnn/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 77
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  input: "^Pred/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "Pred/Model/LSTM/rnn/while/TensorArrayReadV3"
  input: "Pred/Model/LSTM/rnn/while/Identity_3"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 177
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter"
  op: "Enter"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Pred/Model/LSTM/rnn/while/Pred/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter"
  op: "Enter"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Pred/Model/LSTM/rnn/while/Pred/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^Pred/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  op: "Split"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split/split_dim"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add/y"
  op: "Const"
  input: "^Pred/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add"
  op: "Add"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split:2"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul"
  op: "Mul"
  input: "Pred/Model/LSTM/rnn/while/Identity_2"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_1"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  op: "Add"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Tanh_1"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  op: "Const"
  input: "^Pred/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  op: "ConcatV2"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  input: "Pred/Model/LSTM/rnn/while/Identity_5"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter"
  op: "Enter"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Pred/Model/LSTM/rnn/while/Pred/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  op: "MatMul"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/concat"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter"
  op: "Enter"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Pred/Model/LSTM/rnn/while/Pred/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  op: "BiasAdd"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/MatMul"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
  op: "Const"
  input: "^Pred/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  op: "Split"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split/split_dim"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/basic_lstm_cell_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add/y"
  op: "Const"
  input: "^Pred/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add"
  op: "Add"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split:2"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  op: "Sigmoid"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul"
  op: "Mul"
  input: "Pred/Model/LSTM/rnn/while/Identity_4"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  op: "Sigmoid"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  op: "Tanh"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1"
  op: "Mul"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_1"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  op: "Add"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  op: "Tanh"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  op: "Sigmoid"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
  op: "Mul"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Tanh_1"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "Pred/Model/LSTM/rnn/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "Pred/Model/LSTM/rnn/while/Pred/Model/LSTM/rnn/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "Pred/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "Pred/Model/LSTM/rnn/while/Identity"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
  input: "Pred/Model/LSTM/rnn/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/add/y"
  op: "Const"
  input: "^Pred/Model/LSTM/rnn/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/add"
  op: "Add"
  input: "Pred/Model/LSTM/rnn/while/Identity"
  input: "Pred/Model/LSTM/rnn/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/NextIteration"
  op: "NextIteration"
  input: "Pred/Model/LSTM/rnn/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/NextIteration_1"
  op: "NextIteration"
  input: "Pred/Model/LSTM/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/NextIteration_2"
  op: "NextIteration"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/NextIteration_3"
  op: "NextIteration"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_0/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/NextIteration_4"
  op: "NextIteration"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/NextIteration_5"
  op: "NextIteration"
  input: "Pred/Model/LSTM/rnn/while/multi_rnn_cell/cell_1/basic_lstm_cell/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Exit"
  op: "Exit"
  input: "Pred/Model/LSTM/rnn/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Exit_1"
  op: "Exit"
  input: "Pred/Model/LSTM/rnn/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Exit_2"
  op: "Exit"
  input: "Pred/Model/LSTM/rnn/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Exit_3"
  op: "Exit"
  input: "Pred/Model/LSTM/rnn/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Exit_4"
  op: "Exit"
  input: "Pred/Model/LSTM/rnn/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/while/Exit_5"
  op: "Exit"
  input: "Pred/Model/LSTM/rnn/while/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "Pred/Model/LSTM/rnn/TensorArray"
  input: "Pred/Model/LSTM/rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArrayStack/range"
  op: "Range"
  input: "Pred/Model/LSTM/rnn/TensorArrayStack/range/start"
  input: "Pred/Model/LSTM/rnn/TensorArrayStack/TensorArraySizeV3"
  input: "Pred/Model/LSTM/rnn/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "Pred/Model/LSTM/rnn/TensorArray"
  input: "Pred/Model/LSTM/rnn/TensorArrayStack/range"
  input: "Pred/Model/LSTM/rnn/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Pred/Model/LSTM/rnn/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 100
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/rnn/transpose"
  op: "Transpose"
  input: "Pred/Model/LSTM/rnn/TensorArrayStack/TensorArrayGatherV3"
  input: "Pred/Model/LSTM/rnn/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377d\000\000\000"
      }
    }
  }
}
node {
  name: "Pred/Model/LSTM/Reshape"
  op: "Reshape"
  input: "Pred/Model/LSTM/rnn/transpose"
  input: "Pred/Model/LSTM/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LinearLayer/W/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Pred/Model/LinearLayer/W"
      }
    }
  }
}
node {
  name: "Pred/Model/LinearLayer/W"
  op: "HistogramSummary"
  input: "Pred/Model/LinearLayer/W/tag"
  input: "Model/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LinearLayer/MatMul"
  op: "MatMul"
  input: "Pred/Model/LSTM/Reshape"
  input: "Model/W/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Pred/Model/LinearLayer/add"
  op: "Add"
  input: "Pred/Model/LinearLayer/MatMul"
  input: "Model/b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Pred/Model/LinearLayer/Softmax"
  op: "Softmax"
  input: "Pred/Model/LinearLayer/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 24
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "Train/Model/LinearLayer/W"
  input: "Train/Model/cost_mean"
  input: "Train/Model/prediction_prob"
  input: "Pred/Model/LinearLayer/W"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "Model/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "Model/b"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "Train/Model/global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "Model/Model/W/Adadelta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "Model/Model/W/Adadelta_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "Model/Model/b/Adadelta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "Model/Model/b/Adadelta_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  attr {
    key: "N"
    value {
      i: 19
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 19
          }
        }
        string_val: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
        string_val: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
        string_val: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
        string_val: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
        string_val: "Model/W"
        string_val: "Model/b"
        string_val: "Train/Model/global_step"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1"
        string_val: "Model/Model/W/Adadelta"
        string_val: "Model/Model/W/Adadelta_1"
        string_val: "Model/Model/b/Adadelta"
        string_val: "Model/Model/b/Adadelta_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Assign"
  input: "^Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Assign"
  input: "^Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Assign"
  input: "^Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Assign"
  input: "^Model/W/Assign"
  input: "^Model/b/Assign"
  input: "^Train/Model/global_step/Assign"
  input: "^Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta/Assign"
  input: "^Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1/Assign"
  input: "^Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta/Assign"
  input: "^Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1/Assign"
  input: "^Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta/Assign"
  input: "^Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1/Assign"
  input: "^Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta/Assign"
  input: "^Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1/Assign"
  input: "^Model/Model/W/Adadelta/Assign"
  input: "^Model/Model/W/Adadelta_1/Assign"
  input: "^Model/Model/b/Adadelta/Assign"
  input: "^Model/Model/b/Adadelta_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 19
          }
        }
        string_val: "Model/Model/W/Adadelta"
        string_val: "Model/Model/W/Adadelta_1"
        string_val: "Model/Model/b/Adadelta"
        string_val: "Model/Model/b/Adadelta_1"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta"
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1"
        string_val: "Model/W"
        string_val: "Model/b"
        string_val: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
        string_val: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
        string_val: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
        string_val: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
        string_val: "Train/Model/global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 19
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 19
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Model/Model/W/Adadelta"
  input: "Model/Model/W/Adadelta_1"
  input: "Model/Model/b/Adadelta"
  input: "Model/Model/b/Adadelta_1"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1"
  input: "Model/W"
  input: "Model/b"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  input: "Train/Model/global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/Model/W/Adadelta"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Model/Model/W/Adadelta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/Model/W/Adadelta_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Model/Model/W/Adadelta_1"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/Model/b/Adadelta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Model/Model/b/Adadelta"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/Model/b/Adadelta_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Model/Model/b/Adadelta_1"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases/Adadelta_1"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights/Adadelta_1"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases/Adadelta_1"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "Model/Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights/Adadelta_1"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/W"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "Model/W"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/b"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "Model/b"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_0/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 177
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/rnn/multi_rnn_cell/cell_1/basic_lstm_cell/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 400
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "Train/Model/global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "Train/Model/global_step"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
}
versions {
  producer: 21
}
